@{
    ViewData["Title"] = "Home Page";
    
}


<div>
    <h1>Live - CoronaVirus <span id="count" class=""></span><span id="dash"> - </span><span id="death" class=""> </span></h1>
</div>
<div id="world"></div>
        
<script>
    $("#dash").hide()
    var Map =(function (namespace) {
        
        var bombMap = new Datamap({
            element: document.getElementById('world'),
            scope: 'world',
            
            responsive: true,
            geographyConfig: {
                popupOnHover: true,
                highlightOnHover: false
            },

            fills: {
                'USA': '#1f77b4',
                'RUS': '#9467bd',
                'PRK': '#ff7f0e',
                'PRC': '#2ca02c',
                'IND': '#e377c2',
                'GBR': '#8c564b',
                'FRA': '#d62728',
                'PAK': '#7f7f7f',
                defaultFill: '#333745'
            },
            data: {
                'RUS': { fillKey: 'RUS' },
                'PRK': { fillKey: 'PRK' },
                'PRC': { fillKey: 'PRC' },
                'IND': { fillKey: 'IND' },
                'GBR': { fillKey: 'GBR' },
                'FRA': { fillKey: 'FRA' },
                'PAK': { fillKey: 'PAK' },
                'USA': { fillKey: 'USA' }
            }
        });
        bombMap.resize();

        var cases = [];
        $.ajax(
            {
                type: 'GET',
                dataType: 'JSON',
                url: '/api/covid/data/all',
                success:
                    (response) => {
                        // Draw.
                        databuild(response)
                    }
            });
        var databuild = function (response) {
            //var template = {
            //    name: 'Not a bomb, but centered on Brazil',
            //    radius: 23,
            //    centered: 'BRA',
            //    country: 'USA',
            //    yeild: 0,
            //    fillKey: 'USA',
            //    date: '1954-03-01'
            //};
            var count = 0;
            var death = 0;
            for (var state of response) {
                //console.log(template);
                var radius;
                count += state.confirmed;
                death += state.deaths;
                if (state.confirmed > 1000) {
                    radius = state.confirmed / 1000;
                }
                if (state.confirmed < 1000) {
                    radius = state.confirmed / 50;
                }
                if (state.confirmed < 100) {
                    radius = state.confirmed / 5;
                }
                if (state.confirmed < 10) {
                    radius = state.confirmed;
                }
                cases.push({
                    name: 'Covid-19 in ' + state.country,
                    radius: radius,
                    confermati: state.confirmed,
                    guariti: state.recovered,
                    morti: state.deaths,
                    centered: state.id,
                    country: state.id,
                    date: state.lastUpdate,
                    longitude: state.longitude,
                    latitude: state.latitude

                });
            }
            bombMap.bubbles(cases, {
                popupTemplate: function (geo, data) {
                    return ['<div class="hoverinfo">' + data.name,
                    '<br/>Casi: ' + data.confermati + '',
                    '<br/>Country: ' + data.country + '',
                    '<br/>Morti: ' + data.morti + '',
                    '<br/>Date: ' + data.date + '',
                        '</div>'].join('');
                }
            });
            $("#death").html(death)
            $("#death").attr("class", "badge-danger badge-pill")
            $("#dash").show()
            $("#count").html(count)
            $("#count").attr("class", "badge-warning badge-pill")

            /*******
     Zoom behavior
     ********/
            // Keep a reference to the d3 zoom behavior
            var zoom = d3.behavior.zoom();
            var currentZoom = null;

            // Reset d3.event.translate and d3.event.scale
            function resetZoom() {
                zoom.scale(1);
                zoom.translate([0, 0]);
            }
            var zoomInOpts = {
                scaleFactor: 2,
                center: {
                    lat: 45,
                    lng: -90
                },
                transition: {
                    duration: 1000
                },
                onZoomComplete: function (zoomData) {
                    currentZoom = zoomData;
                    resetZoom();
                }
            };
            var zoomOutOpts = {
                scaleFactor: 0.5,
                center: {
                    lat: 40,
                    lng: -90
                },
                transition: {
                    duration: 1000
                },
                onZoomComplete: function (zoomData) {
                    currentZoom = zoomData;
                    resetZoom();
                }
            };

            function transformStr(x, y, scale) {
                //var translateX = d3.event.translate[0];
                //var translateY = d3.event.translate[1];
                //var scale = d3.event.scale;
                return "translate(" + [x, y] + ")scale(" + scale + ")";
            }

            function redraw() {
                var translateX = d3.event.translate[0];
                var translateY = d3.event.translate[1];
                var scale = d3.event.scale;
                console.log("Scale: " + d3.event.scale);

                if (currentZoom) {
                    console.log("CurrentZoom.scale: " + currentZoom.scale);
                    scale *= currentZoom.scale;
                    translateX += currentZoom.translate.x
                    translateY += currentZoom.translate.y;
                }

                bombMap.svg.selectAll("g")
                    .attr("transform", transformStr(translateX, translateY, scale))
                    ;
                // fix the pin scale when zooming.
                bombMap.svg.selectAll("image")
                    // Various options I've tried
                    //.attr("transform", transformStr(translateX+8-(8*scale), translateY+14-(14*scale), scale))
                    //.attr("transform", transformStr(translateX+(scale), translateY+(scale*scale), scale))
                    //.attr("transform", transformStr(translateX-(.5*scale), translateY-(scale), scale))
                    //.attr("transform", transformStr(translateX, translateY, scale))
                    //.attr("transform", transformStr(0, 0, scale))
                    .attr("height", 20 * (1 / scale))
                    .attr("width", 20 * (1 / scale))
                    ;
            }

            // on mousewhel
            bombMap.svg.call(zoom.on("zoom", redraw));


        };
        console.log(cases);
        namespace.cases = cases;
    }(Map || {}))

</script>